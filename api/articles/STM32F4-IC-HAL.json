{"title":"STM32F4 IC HAL","slug":"STM32F4-IC-HAL","date":"2021-08-28T13:43:31.000Z","updated":"2021-09-03T14:44:23.007Z","comments":true,"path":"api/articles/STM32F4-IC-HAL.json","photos":[],"link":"","excerpt":"STM32F4系列HAL库配置定时器实验——输入捕获输入捕获简单讲解","covers":["https://img-blog.csdnimg.cn/f086c7d539c249d4889e26a57d71afff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/416717a8663441c785024c606b6dedf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/96c31d4ed46f4dbf80652b9d55f72887.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/666537b9c41247f592eceb2fd403bb95.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/277e73fd1cc949f9aa72e43cb5844b97.png","https://img-blog.csdnimg.cn/e2f72d9851454b0a9d707a809006e0dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/3c45e24b542b4b7a8ae11faecccf2f4c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/019de05e66ab41af82b504135e40ecc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16"],"content":"<h1 id=\"STM32F4系列HAL库配置定时器实验——输入捕获\"><a href=\"#STM32F4系列HAL库配置定时器实验——输入捕获\" class=\"headerlink\" title=\"STM32F4系列HAL库配置定时器实验——输入捕获\"></a>STM32F4系列HAL库配置定时器实验——输入捕获</h1><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28524893&auto=1&height=66\"></iframe>\n\n<h2 id=\"输入捕获简单讲解\"><a href=\"#输入捕获简单讲解\" class=\"headerlink\" title=\"输入捕获简单讲解\"></a>输入捕获简单讲解</h2><span id=\"more\"></span>\n\n<p>输入捕获模式可以用来测量脉冲宽度或者测量频率。我们以测量周期和频率为例，用一个简图来说明输入捕获的原理<br><img src=\"https://img-blog.csdnimg.cn/f086c7d539c249d4889e26a57d71afff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>假定定时器工作在向上计数模式，<br>图中 t1到t2 时间，就是我们需要测量的高电平时间。测量方法如下：首先设置定时器通道 x 为<br>上升沿捕获，这样，t1 时刻，就会捕获到当前的 CNT 值，然后立即清零 CNT，并设置通道 x为下降沿捕获，这样到 t2 时刻，又会发生捕获事件，得到此时的 CNT 值，记为 CCRx2。这样，根据定时器的计数频率，我们就可以算出 t1~t2 的时间，从而得到高电平脉宽。<br>在 t1到t2 之间，可能产生 N 次定时器溢出，这就要求我们对定时器溢出，做处理，防止高电平太长，导致数据不准确。如图15.1.1所示，t1到t2之间，CNT计数的次数等于：N*ARR+CCRx2，<br>有了这个计数次数，再乘以 CNT 的计数周期，即可得到 t2-t1 的时间长度，即高电平持续时间。<br>输入捕获的原理，我们就介绍到这。<br>STM32F4 的定时器，除了 TIM6 和 TIM7（这些是基本定时器），其他定时器都有输入捕获功能。STM32F4 的输入捕获，简单的说就是通过检测 TIMx_CHx 上的边沿信号，在边沿信号发生跳变（比如上升沿<br>&#x2F;下降沿）的时候，将当前定时器的值（TIMx_CNT）存放到对应的通道的捕获&#x2F;比较寄存器（TIMx_CCRx）里面，完成一次捕获。同时还可以配置捕获时是否触发中断&#x2F;DMA 等。<br><img src=\"https://img-blog.csdnimg.cn/01a264ccb9df400ab39d5a04243b30f5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>你可以用输入捕获通道来检测信号发生器的，也可以用其他定时器输出PWM。</p>\n<h3 id=\"PWM\"><a href=\"#PWM\" class=\"headerlink\" title=\"PWM\"></a>PWM</h3><p>我记得PWM我是没有写的，这里简单提一下，其实就是再之前定时器配置的时候加一个CCR，通过ARR与CCR的值的比较选择引脚输出高低电平。<br><img src=\"https://img-blog.csdnimg.cn/416717a8663441c785024c606b6dedf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>如下图：<br><img src=\"https://img-blog.csdnimg.cn/5de23262b0464afdb7fccd1b5a34d626.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>我们在配置PWM时无非就是在CUBEmx里多了一个Pulse（脉宽）设置：<br><img src=\"https://img-blog.csdnimg.cn/9e91279da89d4d4a9940716790694b93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>PULSE我设置为5，为ARR+1的一半，那么占空比为50%。<br>图中选择的是PWM1模式，即小于CCR时输出高电平，其余默认即可：<br>使能CCR寄存器的预装载功能<br>关闭快速输出模式<br>输出有效电平为高电平<br><img src=\"https://img-blog.csdnimg.cn/96c31d4ed46f4dbf80652b9d55f72887.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>由于STM32F4的最大时钟频率为84Mhz，那么，我设置的PWM的频率为84000000&#x2F;（84*（9+1））&#x3D;100KHZ，周期为1&#x2F;100000s。</p>\n<p>通用定时器可以用来输入捕获，我们用通用定时器即可<br><img src=\"https://img-blog.csdnimg.cn/666537b9c41247f592eceb2fd403bb95.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"输入捕获HAL库配置\"><a href=\"#输入捕获HAL库配置\" class=\"headerlink\" title=\"输入捕获HAL库配置\"></a>输入捕获HAL库配置</h2><p>我们用两个定时器，一个用来输出PWM，一个用来输入捕获。<br>1.选芯片就不用我多说了，我选择的是STM32F401CCU6，因为我在Clion上编写时用F4很方便，STlink直接烧写进去，不用我不停动BOOT设置。<br><img src=\"https://img-blog.csdnimg.cn/277e73fd1cc949f9aa72e43cb5844b97.png\" alt=\"在这里插入图片描述\"><br>2.配置时钟，串口，STM32F4CCU6可以达到最大84MHz的输出<br><img src=\"https://img-blog.csdnimg.cn/00ce5191c3754364b5e0b40289cf69b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/3cc5237fa0464b14812ed59c5490af1d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/364ae506a2f6459aaba2a5cfcaa936e8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>3.配置生成PWM定时器以及输入捕获定时器<br><img src=\"https://img-blog.csdnimg.cn/1f69c9a305224721b6e5b6ce34a335cc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>这里我用TIM3生成我之前提到的相同频率的PWM，一个定时器可以输出多通道的PWM，我们任选其一生成即可，使用内部时钟（打勾）<br>之后，我们用TIM2的通道1输入捕获，同样内部时钟打勾<br><img src=\"https://img-blog.csdnimg.cn/e9e1ccf17cfe4a1aa242419f2962e0cb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>参数设置如下：<br><img src=\"https://img-blog.csdnimg.cn/7ad4b729653f4251893293f6924df7da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>别忘了我们还要使能中断，在中断里进行计算<br><img src=\"https://img-blog.csdnimg.cn/4f3d50d57c04404cb8334d167b623a2c.png\" alt=\"在这里插入图片描述\"><br>点击代码生成即可。<br>个人还是强推Clion，不久前才接触，他的代码补全和界面都比较高大上，这里给大家稚晖君的教程<a href=\"https://www.bilibili.com/read/cv6308000\">优雅的嵌入式开发</a><br>还有一个我们院的大佬的教程<a href=\"http://zhewana.cn/2021/c69c321f18aa/\">CLION配置</a></p>\n<h3 id=\"相关代码\"><a href=\"#相关代码\" class=\"headerlink\" title=\"相关代码\"></a>相关代码</h3><p>鉴于大部分社区里直接给的代码连解释都不解释一下，很影响我们新手学习，<br>看到陌生的代码，人一般都愣一下：<br><img src=\"https://img-blog.csdnimg.cn/e2f72d9851454b0a9d707a809006e0dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>这里我把我之前学习的关于这部分函数的视频给大家：<a href=\"https://www.icourse163.org/learn/UESTC-1207429802?tid=1463457507#/learn/content?type=detail&id=1241335949&cid=1263703167\">MOOC</a><br>明确一下我们要使用的函数：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HAL_TIM_IC_CaptureCallback</span><span class=\"params\">(TIM_HandleTypeDef *htim)</span><span class=\"comment\">//输入捕获回调函数</span></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">HAL_TIM_IC_Start_IT</span><span class=\"params\">(&amp;htim2,TIM_CHANNEL_1)</span></span>;<span class=\"comment\">//输入捕获中断开启</span></span><br><span class=\"line\">  <span class=\"built_in\">HAL_TIM_PWM_Start</span>(&amp;htim3,TIM_CHANNEL_1);<span class=\"comment\">//pwm定时器开启</span></span><br><span class=\"line\">  <span class=\"built_in\">HAL_TIM_IC_Stop_IT</span>(&amp;htim2,TIM_CHANNEL_1);<span class=\"comment\">//输入捕获中断关闭</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">uint32_t</span> <span class=\"title\">HAL_TIM_ReadCapturedValue</span><span class=\"params\">(TIM_HandleTypeDef *htim, <span class=\"type\">uint32_t</span> Channel)</span></span></span><br></pre></td></tr></table></figure>\n\n\n<p>那我们怎么去测呢？我们读到的值是捕获到上升沿的计数值，连续读两次，相减的值就是这段时间的计数值，而我们时钟也是一整段时间的计数值，用总计数值84000000&#x2F;diff，不就是频率吗？将这个频率倒过来就是信号周期。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3c45e24b542b4b7a8ae11faecccf2f4c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>整个过程用前后台编程的思想，分工，主函数里显示计算，中断里读值，读两下，算一下。我们设置两个标志位，用于相互判断，这里计算输出完后才能再次捕获，两次捕获完之后才能计算输出。并且两次捕获依次进行。根据这样我们设置变量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN PV */</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> DIff=<span class=\"number\">0</span>;<span class=\"comment\">//差值</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> CaptureIndex=<span class=\"number\">0</span>;<span class=\"comment\">//捕获标志位</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> MeasureFlag=<span class=\"number\">0</span>;<span class=\"comment\">//测量计算标志位</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> CapVal1=<span class=\"number\">0</span>;<span class=\"comment\">//捕获值1</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> CapVal2=<span class=\"number\">0</span>;<span class=\"comment\">//捕获值2</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END PV */</span></span><br></pre></td></tr></table></figure>\n<p>接下来主函数while中</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(MeasureFlag==<span class=\"number\">1</span>)<span class=\"comment\">//测量位判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(CapVal2&gt;=CapVal1)<span class=\"comment\">//注意这里分两种情况</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       DIff=CapVal2-CapVal1;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">else</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       DIff=((<span class=\"number\">4294967295</span>+<span class=\"number\">1</span>-CapVal1)+CapVal2);<span class=\"comment\">//这种情况在捕获值1在一个计数周期的结束，而捕获值2是下个计数周期的开始</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"built_in\">UART_printf</span>(&amp;huart1,<span class=\"string\">&quot;DIFF=%.8f\\r\\n&quot;</span>,DIff/<span class=\"number\">1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UART_printf</span>(&amp;huart1,<span class=\"string\">&quot;Period=%.8fs\\r\\n&quot;</span>,DIff/<span class=\"number\">84000000.0</span>);</span><br><span class=\"line\">   <span class=\"built_in\">UART_printf</span>(&amp;huart1,<span class=\"string\">&quot;Fred=%dHz\\r\\n&quot;</span>,<span class=\"number\">84000000</span>/DIff);</span><br><span class=\"line\">   <span class=\"built_in\">UART_printf</span>(&amp;huart1,<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">   MeasureFlag=<span class=\"number\">0</span>;<span class=\"comment\">//置位测量标志位</span></span><br><span class=\"line\">    <span class=\"built_in\">HAL_Delay</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"built_in\">HAL_TIM_IC_Start_IT</span>(&amp;htim2,TIM_CHANNEL_1);<span class=\"comment\">//再次开启下次捕获</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>中断函数里捕获</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HAL_TIM_IC_CaptureCallback</span><span class=\"params\">(TIM_HandleTypeDef *htim)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(htim-&gt;Instance==TIM2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(htim-&gt;Channel==HAL_TIM_ACTIVE_CHANNEL_1)<span class=\"comment\">//两次判断</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CaptureIndex==<span class=\"number\">0</span>)<span class=\"comment\">//捕获标志位判断</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            CapVal1= <span class=\"built_in\">HAL_TIM_ReadCapturedValue</span>(&amp;htim2,TIM_CHANNEL_1);<span class=\"comment\">//读捕获值1</span></span><br><span class=\"line\">            CaptureIndex=<span class=\"number\">1</span>;<span class=\"comment\">//捕获标志位=1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(CaptureIndex==<span class=\"number\">1</span>)<span class=\"comment\">//连续读值</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            CapVal2= <span class=\"built_in\">HAL_TIM_ReadCapturedValue</span>(&amp;htim2,TIM_CHANNEL_1);</span><br><span class=\"line\">            CaptureIndex=<span class=\"number\">0</span>;<span class=\"comment\">//捕获标志位置位</span></span><br><span class=\"line\">            MeasureFlag=<span class=\"number\">1</span>;<span class=\"comment\">//测量标志位置1</span></span><br><span class=\"line\">            <span class=\"built_in\">HAL_TIM_IC_Stop_IT</span>(&amp;htim2,TIM_CHANNEL_1);<span class=\"comment\">//关闭中断</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">Error_Handler</span>();<span class=\"comment\">//错误处理</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>串口重定向里使用，因为Clion里没有使用之前的Microlib库，所以必须换一个函数来重定向，加入<code>#include &quot;stdio.h&quot; #include &quot;stdarg.h&quot;</code><br>以及</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN 0 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">UART_printf</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"type\">const</span> <span class=\"type\">char</span> *fmt, ...)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    va_list ap;</span><br><span class=\"line\">    <span class=\"built_in\">va_start</span>(ap, fmt);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> length;</span><br><span class=\"line\">    <span class=\"type\">char</span> buffer[<span class=\"number\">128</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    length = <span class=\"built_in\">vsnprintf</span>(buffer, <span class=\"number\">128</span>, fmt, ap);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">HAL_UART_Transmit</span>(huart, (<span class=\"type\">uint8_t</span> *)buffer, length, HAL_MAX_DELAY);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">va_end</span>(ap);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END 0 */</span></span><br></pre></td></tr></table></figure>\n<p>这个重定向代码很神奇，在MSP432里也可以使用，甚至我在用串口屏也是用到了，有机会研究一下，或者有大佬可以给我留言讲解一下。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/019de05e66ab41af82b504135e40ecc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>之后我们根据cubemx里的图接线（PA0-PA6，usart-USB转TTL），直接烧录。<br><img src=\"https://img-blog.csdnimg.cn/321336ce05894dc6b80ad2f4f6813a14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>和我们TIM3的PWM的设置是一样的。</p>\n","categories":[{"name":"基本功能食用","slug":"基本功能食用","count":10,"path":"api/categories/基本功能食用.json"}],"tags":[{"name":"STM32","slug":"STM32","count":10,"path":"api/tags/STM32.json"},{"name":"基本外设","slug":"基本外设","count":8,"path":"api/tags/基本外设.json"},{"name":"HAL库","slug":"HAL库","count":8,"path":"api/tags/HAL库.json"},{"name":"大一课程准备","slug":"大一课程准备","count":10,"path":"api/tags/大一课程准备.json"}]}