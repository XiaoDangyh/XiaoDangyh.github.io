{"title":"OPENCV C++ Simple recognition of image shape","slug":"OPENCV-C-Simple-recognition-of-image-shape","date":"2021-08-28T14:21:27.000Z","updated":"2021-09-03T14:23:13.570Z","comments":true,"path":"api/articles/OPENCV-C-Simple-recognition-of-image-shape.json","photos":[],"link":"","excerpt":"OPENCV——C++版图像形状简单识别","covers":["https://img-blog.csdnimg.cn/1ac0d39368064836a4b8d5e580b5c32a.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/4ccd54bfea6046c9bdc234ce6db2fa24.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/d6073e4a5a3b4db5ba43a13e6049f29a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/1dc278a01b8a4005a5e4ef65e6ca4280.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/6016317e696b4370a50c9503d9cc7351.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/1785a3afd8c54d3ca37fd8794658a6bd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/0ba7f4a3e6174a6882092152611ff09f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16","https://img-blog.csdnimg.cn/5a538000c88c4795afc69eb1e07cee53.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16"],"content":"<h1 id=\"OPENCV——C-版图像形状简单识别\"><a href=\"#OPENCV——C-版图像形状简单识别\" class=\"headerlink\" title=\"OPENCV——C++版图像形状简单识别\"></a>OPENCV——C++版图像形状简单识别</h1><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=36307046&auto=1&height=66\"></iframe>\n\n<span id=\"more\"></span>\n\n<p><img src=\"https://img-blog.csdnimg.cn/1ac0d39368064836a4b8d5e580b5c32a.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4ccd54bfea6046c9bdc234ce6db2fa24.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>其实就是简单的小实验，识别图形，opencv的库里是有对应的函数。<br>首先可以勾勒出他们的轮廓，其次还可以识别哪些是三角形，哪些是圆形，哪些是矩形。</p>\n<p>这就是形状、轮廓检测的功能。</p>\n<h2 id=\"预处理\"><a href=\"#预处理\" class=\"headerlink\" title=\"预处理\"></a>预处理</h2><p>1.灰度</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cvtColor</span>(img, imgGray,COLOR_BGR2GRAY, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d6073e4a5a3b4db5ba43a13e6049f29a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>2.高斯滤波</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">GaussianBlur</span>(imgGray, imgBlur, <span class=\"built_in\">Size</span>(<span class=\"number\">65</span>, <span class=\"number\">65</span>), <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/1dc278a01b8a4005a5e4ef65e6ca4280.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>3.Canny边缘检测</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Canny</span>(imgBlur, imgCanny, <span class=\"number\">40</span>, <span class=\"number\">120</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/6016317e696b4370a50c9503d9cc7351.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>4.膨胀</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mat kernel = <span class=\"built_in\">getStructuringElement</span>(MORPH_RECT, <span class=\"built_in\">Size</span>(<span class=\"number\">3</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dilate</span>(imgCanny, imgDila, kernel);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/1785a3afd8c54d3ca37fd8794658a6bd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"形状与轮廓检测函数详解\"><a href=\"#形状与轮廓检测函数详解\" class=\"headerlink\" title=\"形状与轮廓检测函数详解\"></a>形状与轮廓检测函数详解</h2><p>这里我推荐这位博主的解释，很详尽。<br><a href=\"https://blog.csdn.net/Kukeoo/article/details/116328341?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163015926816780264034180%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=163015926816780264034180&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v29-1-116328341.pc_search_ecpm_flag&utm_term=conPoly%5Bi%5D.size()&spm=1018.2226.3001.4187\">计算机视觉 OpenCV【七：应用之形状与轮廓检测】</a></p>\n<h2 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> cv;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">getcontour</span><span class=\"params\">(Mat imgDil,Mat img)</span><span class=\"comment\">//判断轮廓</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;vector&lt;Point&gt;&gt; contour;</span><br><span class=\"line\">\tvector&lt;Vec4i&gt; hierarchy;</span><br><span class=\"line\">\t<span class=\"built_in\">findContours</span>(imgDil, contour, hierarchy, RETR_EXTERNAL, CHAIN_APPROX_TC89_KCOS);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tvector&lt;vector&lt;Point&gt;&gt; <span class=\"built_in\">conPoly</span>(contour.<span class=\"built_in\">size</span>());</span><br><span class=\"line\">\t<span class=\"function\">vector&lt;Rect&gt; <span class=\"title\">boundRect</span><span class=\"params\">(contour.size())</span></span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; contour.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> area = <span class=\"built_in\">contourArea</span>(contour[i]);<span class=\"comment\">//轮廓面积用于排除黑点</span></span><br><span class=\"line\">\t\tcout &lt;&lt; area &lt;&lt; endl;</span><br><span class=\"line\">\t\tstring objectType;<span class=\"comment\">//形状</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (area &gt; <span class=\"number\">1000</span>)<span class=\"comment\">//排除小黑圆点的干扰</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">float</span> peri = <span class=\"built_in\">arcLength</span>(contour[i], <span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">approxPolyDP</span>(contour[i], conPoly[i], <span class=\"number\">0.02</span> * peri, <span class=\"literal\">true</span>);<span class=\"comment\">//把一个连续光滑曲线折线化\t\t\t</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; conPoly[i].<span class=\"built_in\">size</span>() &lt;&lt; endl;<span class=\"comment\">//边数</span></span><br><span class=\"line\">\t\t\tboundRect[i] = <span class=\"built_in\">boundingRect</span>(conPoly[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> objCor = (<span class=\"type\">int</span>)conPoly[i].<span class=\"built_in\">size</span>();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (objCor == <span class=\"number\">3</span>) &#123; objectType = <span class=\"string\">&quot;Tri&quot;</span>; &#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (objCor == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">float</span> aspRatio = (<span class=\"type\">float</span>)boundRect[i].width / boundRect[i].height;<span class=\"comment\">//长宽比来区别正方形与矩形</span></span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; aspRatio &lt;&lt; endl;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (aspRatio &gt; <span class=\"number\">0.95</span> &amp;&amp; aspRatio &lt; <span class=\"number\">1.05</span>) &#123; objectType = <span class=\"string\">&quot;Square&quot;</span>; &#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123; objectType = <span class=\"string\">&quot;Rect&quot;</span>; &#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (objCor &gt; <span class=\"number\">4</span>) &#123; objectType = <span class=\"string\">&quot;Circle&quot;</span>; &#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">drawContours</span>(img, conPoly, i, <span class=\"built_in\">Scalar</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>), <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">rectangle</span>(img, boundRect[i].<span class=\"built_in\">tl</span>(), boundRect[i].<span class=\"built_in\">br</span>(), <span class=\"built_in\">Scalar</span>(<span class=\"number\">0.255</span>, <span class=\"number\">0</span>), <span class=\"number\">5</span>);<span class=\"comment\">//框出图形</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">putText</span>(img, objectType, &#123; boundRect[i].x,boundRect[i].y - <span class=\"number\">5</span> &#125;,<span class=\"number\">1</span>,FONT_HERSHEY_PLAIN, <span class=\"built_in\">Scalar</span>(<span class=\"number\">0</span>, <span class=\"number\">69</span>, <span class=\"number\">255</span>), <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tstring path = <span class=\"string\">&quot;Resources/shapes.png&quot;</span>;</span><br><span class=\"line\">\t\tMat img = <span class=\"built_in\">imread</span>(path);<span class=\"comment\">//读取图片</span></span><br><span class=\"line\">\t\tMat imgGray, imgBlur, imgCanny, imgDila, imgErode;</span><br><span class=\"line\">\t\tMat kernel = <span class=\"built_in\">getStructuringElement</span>(MORPH_RECT, <span class=\"built_in\">Size</span>(<span class=\"number\">3</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">//preprocessing</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cvtColor</span>(img, imgGray,COLOR_BGR2GRAY, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">GaussianBlur</span>(imgGray, imgBlur, <span class=\"built_in\">Size</span>(<span class=\"number\">65</span>, <span class=\"number\">65</span>), <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">Canny</span>(imgBlur, imgCanny, <span class=\"number\">40</span>, <span class=\"number\">120</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">dilate</span>(imgCanny, imgDila, kernel);</span><br><span class=\"line\"><span class=\"comment\">//灰度-&gt;高斯滤波-&gt;Canny边缘算法-&gt;膨胀</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">getcontour</span>(imgDila,img);</span><br><span class=\"line\">\t    <span class=\"built_in\">imshow</span>(<span class=\"string\">&quot;Image&quot;</span>, img);</span><br><span class=\"line\">\t<span class=\"comment\">//imshow(&quot;Image Gray&quot;, imgGray);</span></span><br><span class=\"line\">\t<span class=\"comment\">//imshow(&quot;Image Blur&quot;, imgBlur);</span></span><br><span class=\"line\">\t<span class=\"comment\">//imshow(&quot;Image Canny&quot;, imgCanny);</span></span><br><span class=\"line\">\t<span class=\"comment\">//imshow(&quot;Image dila&quot;, imgDila);</span></span><br><span class=\"line\">\t<span class=\"built_in\">waitKey</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>窗口里显示了面积，边数，长宽比。<br><img src=\"https://img-blog.csdnimg.cn/0ba7f4a3e6174a6882092152611ff09f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/5a538000c88c4795afc69eb1e07cee53.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/3210c5f4f09c4c1f95c93e48e93210d1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y2X5bGx56yR,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>效果还是不错的</p>\n","categories":[{"name":"OPENCV","slug":"OPENCV","count":1,"path":"api/categories/OPENCV.json"}],"tags":[{"name":"OPENCV","slug":"OPENCV","count":1,"path":"api/tags/OPENCV.json"},{"name":"轮廓识别","slug":"轮廓识别","count":1,"path":"api/tags/轮廓识别.json"}]}