{"title":"STM32F1 clock systick","slug":"STM32F1-clock-systick","date":"2021-08-23T11:47:06.000Z","updated":"2021-09-05T06:15:38.014Z","comments":true,"path":"api/articles/STM32F1-clock-systick.json","photos":[],"link":"","excerpt":"STM32F1系列HAL库配置系统时钟其实一开始对于时钟我也是知之甚少，在MSP432中我就一直忽视时钟配置，其实也是在STM32学习时落下的病根，现在趁有空补一下。","covers":["https://img-blog.csdnimg.cn/335fd35480c8498aa6a56479c73cf548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/85a2db3aae3a4d86a0ebab56139cf8ec.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/0a57a8c35a244c49837b3ce0502da99a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/efca62c642ad4e22bb3a076de48de7e6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/77abfab18ace40f4996891274841a9f4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/960a8033ed7f40cabdd11142fdc611ea.png","https://img-blog.csdnimg.cn/8ac8adcaff2143a0962f9cee4b3e4093.png","https://img-blog.csdnimg.cn/939f2dcdc1554da7b49e4ecdceb8c8d8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/c85eb87565154bedb28af64883c5100b.png","https://img-blog.csdnimg.cn/22b096026b61425a8879ee6db1b48c99.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70"],"content":"<h1 id=\"STM32F1系列HAL库配置系统时钟\"><a href=\"#STM32F1系列HAL库配置系统时钟\" class=\"headerlink\" title=\"STM32F1系列HAL库配置系统时钟\"></a>STM32F1系列HAL库配置系统时钟</h1><p>其实一开始对于时钟我也是知之甚少，在MSP432中我就一直忽视时钟配置，其实也是在STM32学习时落下的病根，现在趁有空补一下。</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=454924331&auto=1&height=66\"></iframe>\n\n<span id=\"more\"></span>\n\n<h2 id=\"时钟简单讲解\"><a href=\"#时钟简单讲解\" class=\"headerlink\" title=\"时钟简单讲解\"></a>时钟简单讲解</h2><p>对于时钟系统，在之前我写启动文件涉及到，其实，每个功能的实现都涉及到时钟。我们首先说明一下RCC</p>\n<h3 id=\"RCC：复位和时钟控制\"><a href=\"#RCC：复位和时钟控制\" class=\"headerlink\" title=\"RCC：复位和时钟控制\"></a>RCC：复位和时钟控制</h3><p>什么是复位，什么又是时钟？在STM32参考手册中文版我们可以看到<br><img src=\"https://img-blog.csdnimg.cn/335fd35480c8498aa6a56479c73cf548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>注意“<em>除了时钟控制器的RCC_CSR寄存器中的复位标志位和备份区域中的寄存器(见图4)以外，系统复位将复位所有寄存器至它们的复位状态。</em>”这句话告诉我们复位时，让寄存器（除了上述提及的CSR以及备份区域寄存器外）恢复至初始状态，也就是我们上电后寄存器的<strong>默认状态</strong>。<br>我们使用时也是在不断复位中使用的，为什么这么说？</p>\n<p>复位的情况包含了三种：系统复位，电源复位和备份域复位；<br>系统复位就包含了我们的NRST引脚复位，看门狗，软件复位；电源复位就包含我们每次烧录断电后的情况；而备份域复位比较特殊，我们断电后，烧写的程序在下一次上电还会执行，这就是备份域起到了作用，我们单片机有一个电池，当我们断电时，他会给备份域供电，手册上也详细解释到了。<br><img src=\"https://img-blog.csdnimg.cn/85a2db3aae3a4d86a0ebab56139cf8ec.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>但当我们电池也没电且没有向单片机供电时，就引发了备份域复位<br><img src=\"https://img-blog.csdnimg.cn/074274d930524547ab6571aec9a32074.png\" alt=\"在这里插入图片描述\"><br>复位大致就讲到这里。</p>\n<h3 id=\"时钟控制\"><a href=\"#时钟控制\" class=\"headerlink\" title=\"时钟控制\"></a>时钟控制</h3><p>手册后面也是直接讲到了时钟，时钟是一个很重要的概念，我记得在电赛初选的时候考场老师就问了我这个问题（我那时没回答出来，哭哭&#x2F;(ㄒoㄒ)&#x2F;~~）。<br>时钟，打个比方就相当于我们的心跳脉搏，我们人是在一天的心跳中完成身体各部分的运转，我们单片机上的芯片根据时钟来有节拍的工作，像我们之前看到的72MHZ，48MHZ，就是系统主时钟，芯片在主时钟中协调模块的各种工作。<br>比如以下是一个信号接收器，它以某种频率来向out发送高低电平信号，信号接收器的工作时间就受时钟控制，时钟1与2是两个不同频率的时钟，而阴影部分是其工作时间，我们看到时钟频率低（时钟1）的，他的工作精度是没有2好的，在检测时肯定会漏接收很多信号，而2不同，他的工作速度很高，能接收很多次电平信号。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0a57a8c35a244c49837b3ce0502da99a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>以上虽是一个不太恰当的例子，但也是说明了，时钟对于模块的作用，可以给到不同的工作速度，但相对应的，你觉得第二个相比第一个检测波形哪个更为整齐？这就引出了其他问题，你可以让一个普通的芯片时钟频率很高并用于出波（后面的PWM），但是他的输出波形是会有幅频失真和相频失真，总之不会太理想，更高性能的芯片也是有他的极限频率的，并且高频率带来的功耗也是很大的，<del>你可以尝试魔改时钟频率，摸摸你的芯片有多热情，问问你芯片的香味。</del> 总之，功耗，性能，频率，这些都是相互牵制的。<br><img src=\"https://img-blog.csdnimg.cn/57219d6b81464395b8185cc6d1d00f2f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>我们在产品手册上5.3.1也可以看到，（f频率）是有限制的。</p>\n<h3 id=\"时钟源\"><a href=\"#时钟源\" class=\"headerlink\" title=\"时钟源\"></a>时钟源</h3><p>系统时钟可以以HSI,HSE振荡器和PLL作为时钟源，二级时钟源一般是有固定用途的，<br><img src=\"https://img-blog.csdnimg.cn/efca62c642ad4e22bb3a076de48de7e6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>比如RTC（32.768KHz）时钟专门用来给RTC 时钟模块提供时钟源<br><img src=\"https://img-blog.csdnimg.cn/acdb98c05b964dc9b8c6185f3128d909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"时钟树\"><a href=\"#时钟树\" class=\"headerlink\" title=\"时钟树\"></a>时钟树</h3><p>在CUBEMX中是有时钟树的，与我们手册上的图神似，很方便我们去配置<br><img src=\"https://img-blog.csdnimg.cn/77abfab18ace40f4996891274841a9f4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"配置时钟树\"><a href=\"#配置时钟树\" class=\"headerlink\" title=\"配置时钟树\"></a>配置时钟树</h2><h3 id=\"1-选型及RCC配置\"><a href=\"#1-选型及RCC配置\" class=\"headerlink\" title=\"1.选型及RCC配置\"></a>1.选型及RCC配置</h3><p>选择你的芯片类型<br><img src=\"https://img-blog.csdnimg.cn/960a8033ed7f40cabdd11142fdc611ea.png\" alt=\"在这里插入图片描述\"><br>以F103ZETx为例<br><img src=\"https://img-blog.csdnimg.cn/64456e1e689643bb91d5cbd58ea3cb15.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>打开RCC，在MODE一栏我们可以看到HSE,LSI<br><img src=\"https://img-blog.csdnimg.cn/e87cc8cf15a84c329f0e9d62815a7326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>我们一般用高速外部时钟配置系统时钟，他的来源一般是用户输入或者外部晶振，后者常选<br><img src=\"https://img-blog.csdnimg.cn/aaf13ca63424426484dc8fd1b79821c4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>而HSI是由8M的RC振荡器产生的，集成在芯片内部<br><img src=\"https://img-blog.csdnimg.cn/0ff122fb22e34806834c4aa245e34616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/42bd0a96b8e84eb5bef1fda7acd7d317.png\" alt=\"在这里插入图片描述\"></p>\n<p>剩下的就是PLL（锁相环倍频），它用于将我们的其实时钟频率通过倍频增大，这也正是解释了那些频率较高的时钟怎么来的<br><img src=\"https://img-blog.csdnimg.cn/8ac8adcaff2143a0962f9cee4b3e4093.png\" alt=\"在这里插入图片描述\"></p>\n<p>低速时钟有特殊用途，我们用到再考虑。故我们如下配置MODE<br><img src=\"https://img-blog.csdnimg.cn/939f2dcdc1554da7b49e4ecdceb8c8d8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-时钟树配置\"><a href=\"#2-时钟树配置\" class=\"headerlink\" title=\"2.时钟树配置\"></a>2.时钟树配置</h3><p>接着打开时钟树，<img src=\"https://img-blog.csdnimg.cn/c85eb87565154bedb28af64883c5100b.png\" alt=\"在这里插入图片描述\"><br>系统时钟包括三种来源也可以看到，PLL也是由HSE或者HSI作为倍频输入，我们一般选择HSE，再倍频以便输出更高的频率。<br><img src=\"https://img-blog.csdnimg.cn/0c8d1875fc6e4a66a4cf756e0d0bf021.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>在手册时钟树图的后面，我们知道：外设的时钟都是由系统时钟而来的，所以我们先配置好系统时钟<br><img src=\"https://img-blog.csdnimg.cn/22b096026b61425a8879ee6db1b48c99.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在系统时钟之后是HCLK（内部AHB时钟频率），如果我们想要72MHz，只需输入72并回车，他就会给我们配置好一种方案。但是我们之前也说过，频率是有限制的<br><img src=\"https://img-blog.csdnimg.cn/57219d6b81464395b8185cc6d1d00f2f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>如果你手动配置时变红了，很有可能是超过最大范围了。<br>CUBEMX的优点在于它可以帮你选择时钟方案，还有分频因子，实际上就是对输入的频率做除法，我们可以修改它来修改外设使用时钟频率<br><img src=\"https://img-blog.csdnimg.cn/1c6c898027c9418ebafa7bb4e8c0d7ee.png\" alt=\"在这里插入图片描述\"><br>这些时钟都是有各种去向的，我们也可以清楚看到<br><img src=\"https://img-blog.csdnimg.cn/efb076abddd146719c24da7816ef4b98.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>其他去向不过多解释了，之后都会接触到大部分。<br>点击生成代码<br><img src=\"https://img-blog.csdnimg.cn/b3e1bbe9f5f3486782cc46c564432fcd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这些都是和我们之前配置是一样的，CUBEMX配置时钟很方便。</p>\n","categories":[{"name":"基本功能食用","slug":"基本功能食用","count":10,"path":"api/categories/基本功能食用.json"}],"tags":[{"name":"STM32","slug":"STM32","count":10,"path":"api/tags/STM32.json"},{"name":"基本外设","slug":"基本外设","count":8,"path":"api/tags/基本外设.json"},{"name":"HAL库","slug":"HAL库","count":8,"path":"api/tags/HAL库.json"},{"name":"大一课程准备","slug":"大一课程准备","count":10,"path":"api/tags/大一课程准备.json"}]}