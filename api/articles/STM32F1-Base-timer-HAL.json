{"title":"STM32F1 Base timer &HAL","slug":"STM32F1-Base-timer-HAL","date":"2021-08-26T03:43:05.000Z","updated":"2021-09-05T06:16:22.403Z","comments":true,"path":"api/articles/STM32F1-Base-timer-HAL.json","photos":[],"link":"","excerpt":"STM32F1系列基本定时器HAL库配置时钟的概念了解完就趁热打铁进行定时器的简单讲解，定时器的操作是十分重要的，他不仅可以用于计数&#x2F;定时（两者其实一个道理），还可以生成PWM，输入捕获等等，高级定时器可以用于工业电机上的有关操作。所以，我们专门讲解一波基本定时器，并用它做一个闪烁灯小实验。","covers":["https://img-blog.csdnimg.cn/9cd5d072c7be40368c6a3f9713eeb1d1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/ac666bfd44864ea1a588b8d4b75a9949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/4bc5d6a7457942038c257833919c852d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/1091b43c6cf048ddac189348e7aa74e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/7ebc0f529a714bb99056de788be6e05c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/330922f982ce45d395c7a0d6639431af.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/97e1ea7436284a6e96ea31f9f3a53228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/cdb3d626310745fcaa1ba605f5a41644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/d9cf30dc75d9431e9ce13a87446e1830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/b0a5fb1780de4888970fb27ce10d4f5b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70"],"content":"<h1 id=\"STM32F1系列基本定时器HAL库配置\"><a href=\"#STM32F1系列基本定时器HAL库配置\" class=\"headerlink\" title=\"STM32F1系列基本定时器HAL库配置\"></a>STM32F1系列基本定时器HAL库配置</h1><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29593075&auto=1&height=66\"></iframe>\n\n<p>时钟的概念了解完就趁热打铁进行定时器的简单讲解，定时器的操作是十分重要的，他不仅可以用于计数&#x2F;定时（两者其实一个道理），还可以生成PWM，输入捕获等等，高级定时器可以用于工业电机上的有关操作。所以，我们专门讲解一波基本定时器，并用它做一个闪烁灯小实验。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"定时器简介\"><a href=\"#定时器简介\" class=\"headerlink\" title=\"定时器简介\"></a>定时器简介</h2><p>在STM32F1上，常规定时器分为三种定时器：高级，通用，基本；</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9cd5d072c7be40368c6a3f9713eeb1d1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>高级定时器的功能涵盖通用定时器，通用定时器功能涵盖基本定时器<br><img src=\"https://img-blog.csdnimg.cn/d29793b613584cfdb89e9bc6d25d4c07.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>以基本定时器实现计数功能，这里说的并不准确，应该说是定时功能，<br>定时是对<strong>周期固定</strong>的脉冲信号进行计数如APB（MCU的外设时钟APB），而计数是对<strong>周期不确定</strong>（可能固定也可能不固定）的脉冲信号进行计数。<br>更为深入的比喻：就是水杯中装水的问题，水杯共100滴水，但200滴水才能装满，还要装100滴水才能装满，101滴水加入就发生溢出，这是<strong>计数</strong>。而一秒滴一滴水，需要100秒装满，这是<strong>定时</strong>。<br>在这个比喻中，我们重点关注的对象有三个：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classDiagram</span><br><span class=\"line\"></span><br><span class=\"line\">    关注问题 --&gt; 位宽 : </span><br><span class=\"line\">    关注问题 --&gt; 计数值</span><br><span class=\"line\">    关注问题 --&gt; 溢出事件</span><br><span class=\"line\">    溢出事件:  溢出时执行的操作</span><br><span class=\"line\">     计数值: 初值（计数器原有的值）</span><br><span class=\"line\">     计数值: 终值（使计数器溢出的值）</span><br><span class=\"line\">     位宽 : 16位定时器计数范围：0-65535</span><br></pre></td></tr></table></figure>\n<p>定时器模式下，我们还要知道：<br>时钟频率：送入定时器周期性时钟信号的频率，如STM32F1的最大时钟频率72MHz，<br>计数周期：计数单元记一次数索要花费的时间，一般为时钟频率的倒数，如STM32F1以72MHz为例，1&#x2F;72000000&#x3D;0.000000138889秒记一次数。<br>那么&#x3D;&#x3D;定时时间&#x3D;计数周期*计数值&#x3D;计数周期&#x2F;时钟频率&#x3D;&#x3D;<br>请理解这个公式，之后我们进行预分频操作也是用这个式子计算。</p>\n<h3 id=\"基本定时器功能实现\"><a href=\"#基本定时器功能实现\" class=\"headerlink\" title=\"基本定时器功能实现\"></a>基本定时器功能实现</h3><p>基本定时器的核心是时基（BASE），通用与高级定时器都有时基，主要集中在F1的TIM6和TIM7.以下是他的功能框图。<br><img src=\"https://img-blog.csdnimg.cn/ac666bfd44864ea1a588b8d4b75a9949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>以下讲解最重要的预分频模块，计数模块，自动重装载模块</p>\n<h3 id=\"预分频模块\"><a href=\"#预分频模块\" class=\"headerlink\" title=\"预分频模块\"></a>预分频模块</h3><p><img src=\"https://img-blog.csdnimg.cn/4bc5d6a7457942038c257833919c852d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>工作方式及时序图<br>定时器工作模式开始时，预分频计数器初始为0，每来一次时钟，每进行一次计数溢出就会++，等到加到设定的预分频值时，计数结束，再次初始为0，开始下一次计数。<br><img src=\"https://img-blog.csdnimg.cn/d951147c3800458db0797370452341c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"计数模块\"><a href=\"#计数模块\" class=\"headerlink\" title=\"计数模块\"></a>计数模块</h3><p>计数器 CNT 是一个 16 位的计数器，只能往上计数，最大计数值为 65535。当计数达到自动重装载寄存器的时候产生更新事件，并清零从头开始计数。</p>\n<h3 id=\"自动重载模块\"><a href=\"#自动重载模块\" class=\"headerlink\" title=\"自动重载模块\"></a>自动重载模块</h3><p>自动重装载寄存器 ARR 是一个 16 位的寄存器，这里面装着计数器能计数的最大数值。当计数到这个值的时候，如果使能了中断的话，定时器就产生溢出中断。<br><img src=\"https://img-blog.csdnimg.cn/1091b43c6cf048ddac189348e7aa74e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>谈到自动重装载值就不得不提三种计数模式<br><img src=\"https://img-blog.csdnimg.cn/c49942764196451d9384fd523a5e12be.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>基本定时器都是向上计数，&#x3D;&#x3D;我们的计数值&#x3D;ARR+1&#x3D;&#x3D;</p>\n<h3 id=\"更为关心：计数时间的计算\"><a href=\"#更为关心：计数时间的计算\" class=\"headerlink\" title=\"更为关心：计数时间的计算\"></a>更为关心：计数时间的计算</h3><p>记得之前的&#x3D;&#x3D;定时时间&#x3D;计数周期<em>计数值&#x3D;计数周期&#x2F;时钟频率&#x3D;&#x3D;公式<br>我们用了预分频改变了时钟频率，又加入了重装载值，那么，在基本定时器下，我们的定时时间就变成了<br>t&#x3D;（ARR+1）</em>（PSC+1）&#x2F;TIM_CLK<br><img src=\"https://img-blog.csdnimg.cn/7ebc0f529a714bb99056de788be6e05c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"基本代码讲解\"><a href=\"#基本代码讲解\" class=\"headerlink\" title=\"基本代码讲解\"></a>基本代码讲解</h2><p>在 HAL 库函数头文件 stm32f1xx_hal_tim.h 中对定时器外设建立了四个初始化结构体，基本定时器只用到其中一个即 TIM_TimeBaseInitTypeDef</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> Prescaler; <span class=\"comment\">// 预分频器</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> CounterMode; <span class=\"comment\">// 计数模式</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> Period; <span class=\"comment\">// 定时器周期</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> ClockDivision; <span class=\"comment\">// 时钟分频</span></span><br><span class=\"line\"><span class=\"type\">uint32_t</span> RepetitionCounter; <span class=\"comment\">// 重复计算器</span></span><br><span class=\"line\">&#125; TIM_TimeBaseInitTypeDef;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"number\">1</span>) Prescaler：定时器预分频器设置，时钟源经该预分频器才是定时器时钟，它设定 TIMx_PSC</span><br><span class=\"line\">寄存器的值。可设置范围为 <span class=\"number\">0</span> 至 <span class=\"number\">65535</span>，实现 <span class=\"number\">1</span> 至 <span class=\"number\">65536</span> 分频。</span><br><span class=\"line\">(<span class=\"number\">2</span>) CounterMode：定时器计数方式，可是在为向上计数、向下计数以及三种中心对齐模式。基</span><br><span class=\"line\">本定时器只能是向上计数，即 TIMx_CNT 只能从 <span class=\"number\">0</span> 开始递增，并且无需初始化。</span><br><span class=\"line\">(<span class=\"number\">3</span>) Period：定时器周期，实际就是设定自动重载寄存器的值，在事件生成时更新到影子寄存</span><br><span class=\"line\">器。可设置范围为 <span class=\"number\">0</span> 至 <span class=\"number\">65535</span>。</span><br><span class=\"line\">(<span class=\"number\">4</span>) ClockDivision：时钟分频，设置定时器时钟 CK_INT 频率与数字滤波器采样时钟频率分频</span><br><span class=\"line\">比，基本定时器没有此功能，不用设置。</span><br><span class=\"line\">(<span class=\"number\">5</span>) RepetitionCounter：重复计数器，属于高级控制寄存器专用寄存器位，利用它可以非常容易</span><br><span class=\"line\">控制输出 PWM 的个数。这里不用设置。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>虽然定时器基本初始化结构体有 5 个成员，但对于基本定时器只需设置其中两个就可以，想想使用基本定时器就是简单。<br><img src=\"https://img-blog.csdnimg.cn/330922f982ce45d395c7a0d6639431af.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/b54a403aa3bc4359911fa334bc971ed7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2e7c8be98f274ad09d733ba66005083f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/005841c5f1864fb88be8bf37e775332d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/27d47a2d8173467db9acc471714e9c21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/6f34b9d420c04ff19264fbf3b62d472a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/caf9371d9c36466f8d3327203cf437c1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CUBEMX配置\"><a href=\"#CUBEMX配置\" class=\"headerlink\" title=\"CUBEMX配置\"></a>CUBEMX配置</h2><p>任务：闪烁灯需要开一个定时器，并规定定时时间比如1s<br>分析：选择基本定时器TIM6，挂在APB2总线时钟上（最大72MHz），根据公式&#x3D;&#x3D;t&#x3D;（ARR+1）*（PSC+1）&#x2F;TIM_CLK&#x3D;&#x3D;，设置预分频为7200-1，ARR为10000-1，t&#x3D;1s。</p>\n<h3 id=\"1-选芯：这步就不用我多说了，选择对应的芯片类型\"><a href=\"#1-选芯：这步就不用我多说了，选择对应的芯片类型\" class=\"headerlink\" title=\"1.选芯：这步就不用我多说了，选择对应的芯片类型\"></a>1.选芯：这步就不用我多说了，选择对应的芯片类型</h3><p><img src=\"https://img-blog.csdnimg.cn/97e1ea7436284a6e96ea31f9f3a53228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-设置指示灯引脚\"><a href=\"#2-设置指示灯引脚\" class=\"headerlink\" title=\"2.设置指示灯引脚\"></a>2.设置指示灯引脚</h3><p>F103ZETx的灯在PB5与PE5上，选择GPIO_OUTPUT<br><img src=\"https://img-blog.csdnimg.cn/cdb3d626310745fcaa1ba605f5a41644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>默认设置即可，我加了LED（user label）<br><img src=\"https://img-blog.csdnimg.cn/03723b44fbdd406ab7bef0c92eebe3ad.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-设置TIM6基本定时器\"><a href=\"#3-设置TIM6基本定时器\" class=\"headerlink\" title=\"3.设置TIM6基本定时器\"></a>3.设置TIM6基本定时器</h3><p><img src=\"https://img-blog.csdnimg.cn/d9cf30dc75d9431e9ce13a87446e1830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>开TIM6中断<br><img src=\"https://img-blog.csdnimg.cn/ea971e9727604f5dac432e7145b19c69.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-时钟配置\"><a href=\"#4-时钟配置\" class=\"headerlink\" title=\"4.时钟配置\"></a>4.时钟配置</h3><p>选择RCC，HSE选择外部晶振<br><img src=\"https://img-blog.csdnimg.cn/b0a5fb1780de4888970fb27ce10d4f5b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>HCLK：72Mhz回车，保证APB2为72MHZ<br><img src=\"https://img-blog.csdnimg.cn/df20035a309144ebbf6ef3090505198d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2F6czA1MDQ=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>点击生成代码</p>\n<h3 id=\"5-代码编写\"><a href=\"#5-代码编写\" class=\"headerlink\" title=\"5.代码编写\"></a>5.代码编写</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN Header */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  ******************************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">  * @file           : main.c</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief          : Main program body</span></span><br><span class=\"line\"><span class=\"comment\">  ******************************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">  * @attention</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * &lt;h2&gt;&lt;center&gt;&amp;copy; Copyright (c) 2021 STMicroelectronics.</span></span><br><span class=\"line\"><span class=\"comment\">  * All rights reserved.&lt;/center&gt;&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * This software component is licensed by ST under BSD 3-Clause license,</span></span><br><span class=\"line\"><span class=\"comment\">  * the &quot;License&quot;; You may not use this file except in compliance with the</span></span><br><span class=\"line\"><span class=\"comment\">  * License. You may obtain a copy of the License at:</span></span><br><span class=\"line\"><span class=\"comment\">  *                        opensource.org/licenses/BSD-3-Clause</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  ******************************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END Header */</span></span><br><span class=\"line\"><span class=\"comment\">/* Includes ------------------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private includes ----------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN Includes */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END Includes */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private typedef -----------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN PTD */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END PTD */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private define ------------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN PD */</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END PD */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private macro -------------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN PM */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END PM */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private variables ---------------------------------------------------------*/</span></span><br><span class=\"line\">TIM_HandleTypeDef htim6;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN PV */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END PV */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private function prototypes -----------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">SystemClock_Config</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">MX_GPIO_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">MX_TIM6_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN PFP */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END PFP */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private user code ---------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN 0 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END 0 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief  The application entry point.</span></span><br><span class=\"line\"><span class=\"comment\">  * @retval int</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN 1 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END 1 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* MCU Configuration--------------------------------------------------------*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class=\"line\">  HAL_Init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN Init */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END Init */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Configure the system clock */</span></span><br><span class=\"line\">  SystemClock_Config();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN SysInit */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END SysInit */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Initialize all configured peripherals */</span></span><br><span class=\"line\">  MX_GPIO_Init();</span><br><span class=\"line\">  MX_TIM6_Init();</span><br><span class=\"line\">__HAL_TIM_CLEAR_IT(&amp;htim6, TIM_IT_UPDATE);<span class=\"comment\">//防止定时器初始化后直接进入中断，清楚定时器初始化后的更新中断标志</span></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN 2 */</span></span><br><span class=\"line\">  HAL_TIM_Base_Start_IT(&amp;htim6);<span class=\"comment\">//使能定时器6更新中断并启动定时器</span></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END 2 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Infinite loop */</span></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN WHILE */</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* USER CODE END WHILE */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* USER CODE BEGIN 3 */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END 3 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief System Clock Configuration</span></span><br><span class=\"line\"><span class=\"comment\">  * @retval None</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">SystemClock_Config</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  RCC_OscInitTypeDef RCC_OscInitStruct = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">  RCC_ClkInitTypeDef RCC_ClkInitStruct = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** Initializes the RCC Oscillators according to the specified parameters</span></span><br><span class=\"line\"><span class=\"comment\">  * in the RCC_OscInitTypeDef structure.</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;</span><br><span class=\"line\">  RCC_OscInitStruct.HSEState = RCC_HSE_ON;</span><br><span class=\"line\">  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;</span><br><span class=\"line\">  RCC_OscInitStruct.HSIState = RCC_HSI_ON;</span><br><span class=\"line\">  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;</span><br><span class=\"line\">  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;</span><br><span class=\"line\">  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAL_RCC_OscConfig(&amp;RCC_OscInitStruct) != HAL_OK)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Error_Handler();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/** Initializes the CPU, AHB and APB buses clocks</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK</span><br><span class=\"line\">                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;</span><br><span class=\"line\">  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;</span><br><span class=\"line\">  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;</span><br><span class=\"line\">  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;</span><br><span class=\"line\">  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAL_RCC_ClockConfig(&amp;RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Error_Handler();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief TIM6 Initialization Function</span></span><br><span class=\"line\"><span class=\"comment\">  * @param None</span></span><br><span class=\"line\"><span class=\"comment\">  * @retval None</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">MX_TIM6_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN TIM6_Init 0 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END TIM6_Init 0 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  TIM_MasterConfigTypeDef sMasterConfig = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN TIM6_Init 1 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END TIM6_Init 1 */</span></span><br><span class=\"line\">  htim6.Instance = TIM6;</span><br><span class=\"line\">  htim6.Init.Prescaler = <span class=\"number\">7200</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class=\"line\">  htim6.Init.Period = <span class=\"number\">10000</span>;</span><br><span class=\"line\">  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAL_TIM_Base_Init(&amp;htim6) != HAL_OK)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Error_Handler();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class=\"line\">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim6, &amp;sMasterConfig) != HAL_OK)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Error_Handler();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN TIM6_Init 2 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END TIM6_Init 2 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief GPIO Initialization Function</span></span><br><span class=\"line\"><span class=\"comment\">  * @param None</span></span><br><span class=\"line\"><span class=\"comment\">  * @retval None</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">MX_GPIO_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* GPIO Ports Clock Enable */</span></span><br><span class=\"line\">  __HAL_RCC_GPIOB_CLK_ENABLE();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*Configure GPIO pin Output Level */</span></span><br><span class=\"line\">  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*Configure GPIO pin : LED_Pin */</span></span><br><span class=\"line\">  GPIO_InitStruct.Pin = LED_Pin;</span><br><span class=\"line\">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class=\"line\">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class=\"line\">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class=\"line\">  HAL_GPIO_Init(LED_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN 4 */</span></span><br><span class=\"line\"><span class=\"comment\">//加入中断回调处理</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">HAL_TIM_PeriodElapsedCallback</span><span class=\"params\">(TIM_HandleTypeDef *htim)</span><span class=\"comment\">//回调函数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(htim -&gt; Instance ==TIM6)<span class=\"comment\">//判断发生中断的定时器</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tHAL_GPIO_TogglePin(GPIOB,GPIO_PIN_5);<span class=\"comment\">//翻转电平状态</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END 4 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief  This function is executed in case of error occurrence.</span></span><br><span class=\"line\"><span class=\"comment\">  * @retval None</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Error_Handler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN Error_Handler_Debug */</span></span><br><span class=\"line\">  <span class=\"comment\">/* User can add his own implementation to report the HAL error return state */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END Error_Handler_Debug */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span>  USE_FULL_ASSERT</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * @brief  Reports the name of the source file and the source line number</span></span><br><span class=\"line\"><span class=\"comment\">  *         where the assert_param error has occurred.</span></span><br><span class=\"line\"><span class=\"comment\">  * @param  file: pointer to the source file name</span></span><br><span class=\"line\"><span class=\"comment\">  * @param  line: assert_param error line source number</span></span><br><span class=\"line\"><span class=\"comment\">  * @retval None</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">assert_failed</span><span class=\"params\">(<span class=\"type\">uint8_t</span> *file, <span class=\"type\">uint32_t</span> line)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN 6 */</span></span><br><span class=\"line\">  <span class=\"comment\">/* User can add his own implementation to report the file name and line number,</span></span><br><span class=\"line\"><span class=\"comment\">     tex: printf(&quot;Wrong parameters value: file %s on line %d\\r\\n&quot;, file, line) */</span></span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END 6 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">/* USE_FULL_ASSERT */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>以上除了我后面加中文注释的需要看，其余都是CUBEMX自己生成的。<br>烧录后可以看到效果。<br>函数介绍图片转自mooc上漆强老师的PPT<a href=\"https://www.icourse163.org/learn/UESTC-1207429802?tid=1463457507#/learn/content?type=detail&id=1241335945&cid=1263703159&replay=true\">MOOC</a><br>感谢！</p>\n","categories":[{"name":"基本功能食用","slug":"基本功能食用","count":10,"path":"api/categories/基本功能食用.json"}],"tags":[{"name":"STM32","slug":"STM32","count":10,"path":"api/tags/STM32.json"},{"name":"大一课程准备","slug":"大一课程准备","count":10,"path":"api/tags/大一课程准备.json"},{"name":"基本外设","slug":"基本外设","count":8,"path":"api/tags/基本外设.json"},{"name":"HAL库","slug":"HAL库","count":8,"path":"api/tags/HAL库.json"}]}